{"version":3,"file":"347.js?ver=88887f800e4cfa7ce4f0","mappings":"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","sources":["webpack://spotify-demo/./src/apis/albumApi.ts","webpack://spotify-demo/./src/hooks/useGetNewReleases.ts","webpack://spotify-demo/./src/hooks/useClientCredentialToken.ts","webpack://spotify-demo/./src/common/components/ErrorMessage.tsx","webpack://spotify-demo/./src/common/components/PlayButton.tsx","webpack://spotify-demo/./src/common/components/Card.tsx","webpack://spotify-demo/./src/pages/HomePage/components/NewReleases.tsx","webpack://spotify-demo/./src/pages/HomePage/HomePage.tsx"],"sourcesContent":["import axios from 'axios'\nimport { SPOTIFY_BASE_URL } from '../configs/commonConfig'\nimport { GetNewReleasesResponse } from '../models/album'\n\nexport const getNewReleases = async (clientCredentialToken: string): Promise<GetNewReleasesResponse> => {\n  try {\n    const response = await axios.get(`${SPOTIFY_BASE_URL}/browse/new-releases?limit=6`, {\n      headers: {\n        Authorization: `Bearer ${clientCredentialToken}`,\n      },\n    })\n    return response.data\n  } catch (error) {\n    throw new Error('fail to fetch new release')\n  }\n}\n","import { useQuery } from '@tanstack/react-query'\nimport useClientCredentialToken from './useClientCredentialToken'\nimport { getNewReleases } from '../apis/albumApi'\n\nconst useGetNewReleases = () => {\n  const clientCredentialToken = useClientCredentialToken()\n  return useQuery({\n    queryKey: ['new-releases'],\n    queryFn: async () => {\n      if (!clientCredentialToken) {\n        throw new Error('토큰 없어')\n      }\n\n      return getNewReleases(clientCredentialToken)\n    },\n  })\n}\n\nexport default useGetNewReleases\n","import { useQuery } from '@tanstack/react-query'\nimport { getClientCredentialToken } from '../apis/authApi'\n\nconst useClientCredentialToken = (): string | undefined => {\n  const { data } = useQuery({\n    queryKey: ['client-credential=token'],\n    queryFn: getClientCredentialToken,\n  })\n\n  const clientCredentialToken = data?.access_token\n\n  return clientCredentialToken\n}\n\nexport default useClientCredentialToken\n","import { Alert } from '@mui/material'\nimport React from 'react'\n\ninterface ErrorMessageProps {\n  errorMessage: string\n}\n\nconst ErrorMessage = ({ errorMessage }: ErrorMessageProps) => {\n  return <Alert severity=\"error\">{errorMessage}</Alert>\n}\n\nexport default ErrorMessage\n","import { styled } from '@mui/material'\nimport React from 'react'\n\nconst PlayButtonContainer = styled('button')(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  border: 'none',\n  borderRadius: '50%',\n  width: '50px',\n  height: '50px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  boxShadow: 'rgba(0, 0, 0, 0.3) 0px 8px 8px 0px',\n  '&:focus': {\n    outline: 'none',\n  },\n}))\n\nconst PlayButton: React.FC = () => {\n  return (\n    <PlayButtonContainer>\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M8 5v14l11-7z\" fill=\"black\" />\n      </svg>\n    </PlayButtonContainer>\n  )\n}\n\nexport default PlayButton\n","import { styled, Typography } from '@mui/material'\nimport React from 'react'\nimport PlayButton from './PlayButton'\n\nconst CardContainer = styled('div')(({ theme }) => ({\n  minWidth: '160px',\n  width: '100%',\n  height: '100%',\n  padding: '12px',\n  borderRadius: '8px',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n    transform: 'translate3d(0px, 0px, 0px)',\n    transition: 'opacity 0.3s ease-in-out',\n  },\n  '&:hover .overlay': {\n    opacity: 1,\n  },\n}))\nconst AlbumImage = styled('img')({\n  width: '100%',\n  height: 'auto',\n  borderRadius: '8px',\n  marginBottom: '8px',\n})\nconst EllipsisTypography = styled(Typography)({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nconst Overlay = styled('div')({\n  position: 'absolute',\n  bottom: '20px',\n  right: '8px',\n  opacity: 0,\n  transform: 'translate3d(0px, 0px, 0px)',\n  transition: 'opacity 0.3s ease-in-out',\n})\n\ninterface CardProps {\n  name: string | undefined\n  artistName?: string | undefined\n  image: string | undefined\n}\n\nconst Card = ({ name, artistName, image }: CardProps) => {\n  return (\n    <CardContainer>\n      <div style={{ position: 'relative' }}>\n        <AlbumImage src={image} />\n        <Overlay className=\"overlay\">\n          <PlayButton />\n        </Overlay>\n      </div>\n\n      <EllipsisTypography variant=\"h2\">{name || 'No name'}</EllipsisTypography>\n      <EllipsisTypography variant=\"body1\" color=\"text.secondary\">\n        {artistName || 'No artist'}\n      </EllipsisTypography>\n    </CardContainer>\n  )\n}\n\nexport default Card\n","import { Grid, Typography } from '@mui/material'\nimport useGetNewReleases from '../../../hooks/useGetNewReleases'\nimport LoadingPage from '../../../common/components/LoadingPage'\nimport ErrorMessage from '../../../common/components/ErrorMessage'\n\nimport Card from '../../../common/components/Card'\n\nconst NewReleases = () => {\n  const { data, error, isLoading } = useGetNewReleases()\n\n  if (isLoading) {\n    return <LoadingPage />\n  }\n  if (error) {\n    return <ErrorMessage errorMessage={error.message} />\n  }\n  return (\n    <div>\n      <div>\n        <Typography variant=\"h1\" paddingTop=\"8px\">\n          New Released Albums\n        </Typography>\n        {data && data.albums.items.length > 0 ? (\n          <Grid container spacing={2}>\n            {data.albums.items.map((album) => (\n              <Grid size={{ xs: 6, sm: 4, md: 2 }} key={album.id}>\n                <Card\n                  name={album.name}\n                  artistName={album.artists.map((artist) => artist.name).join(', ')}\n                  image={album.images[0].url}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          <Typography variant=\"h2\">No data</Typography>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default NewReleases\n","import React from 'react'\nimport NewReleases from './components/NewReleases'\n\nconst HomePage = () => {\n  return (\n    <div>\n      <NewReleases></NewReleases>\n    </div>\n  )\n}\n\nexport default HomePage\n"],"names":["useGetNewReleases","clientCredentialToken","useClientCredentialToken","data","useQuery","queryKey","queryFn","getClientCredentialToken","access_token","async","Error","axios","get","concat","SPOTIFY_BASE_URL","headers","Authorization","error","getNewReleases","_ref","errorMessage","_jsx","Alert","severity","children","PlayButtonContainer","styled","theme","backgroundColor","palette","primary","main","border","borderRadius","width","height","display","alignItems","justifyContent","cursor","boxShadow","outline","PlayButton","viewBox","fill","xmlns","d","CardContainer","minWidth","padding","action","hover","transform","transition","opacity","AlbumImage","marginBottom","EllipsisTypography","Typography","whiteSpace","overflow","textOverflow","Overlay","position","bottom","right","_ref2","name","artistName","image","_jsxs","style","src","className","variant","color","NewReleases","isLoading","LoadingPage","ErrorMessage","message","paddingTop","albums","items","length","Grid","container","spacing","map","album","size","xs","sm","md","Card","artists","artist","join","images","url","id","HomePage"],"sourceRoot":""}