{"version":3,"file":"445.js?ver=163e66b247224a4043d0","mappings":"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","sources":["webpack://spotify-demo/./src/layout/components/LibraryHead.tsx","webpack://spotify-demo/./src/utils/api.ts","webpack://spotify-demo/./src/hooks/useGetCurrentUserPlaylists.ts","webpack://spotify-demo/./src/apis/playlistApi.ts","webpack://spotify-demo/./src/apis/userApi.ts","webpack://spotify-demo/./src/hooks/useGetCurrentUserProfile.ts","webpack://spotify-demo/./src/layout/components/Library.tsx","webpack://spotify-demo/./src/utils/crypto.ts","webpack://spotify-demo/./src/common/components/LoginBtn.tsx","webpack://spotify-demo/./src/utils/auth.ts","webpack://spotify-demo/./src/layout/components/Navbar.tsx","webpack://spotify-demo/./src/layout/AppLayout.tsx"],"sourcesContent":["import BookmarkIcon from '@mui/icons-material/Bookmark'\nimport { styled, Typography } from '@mui/material'\nimport AddRoundedIcon from '@mui/icons-material/AddRounded'\n\nconst AddLibrary = styled('div')(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-evenly',\n  marginTop: '30px',\n}))\n\nconst LibraryHead = () => {\n  return (\n    <div>\n      <AddLibrary>\n        <BookmarkIcon />\n        <Typography variant=\"h2\" fontWeight={700}>\n          Your Library\n        </Typography>\n        <AddRoundedIcon sx={{ color: 'green' }} />\n      </AddLibrary>\n    </div>\n  )\n}\n\nexport default LibraryHead\n","import axios from 'axios'\nimport { SPOTIFY_BASE_URL } from '../configs/commonConfig'\n\nconst api = axios.create({\n  baseURL: SPOTIFY_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n  },\n})\n\napi.interceptors.request.use((request) => {\n  request.headers.Authorization = `Bearer ${localStorage.getItem('access_token')}`\n  return request\n})\n\nexport default api\n","import { useInfiniteQuery, useQuery } from '@tanstack/react-query'\nimport getCurrentUserPlaylists from '../apis/playlistApi'\nimport { GetCurrentUserPlaylistRequest } from '../models/playlist'\n\nconst useGetCurrentUserPlaylists = ({ limit, offset }: GetCurrentUserPlaylistRequest) => {\n  return useInfiniteQuery({\n    queryKey: ['current-user-playlists'],\n    queryFn: ({ pageParam = 0 }) => {\n      return getCurrentUserPlaylists({ limit, offset: pageParam })\n    },\n    initialPageParam: 0, // 첫 시작값\n    getNextPageParam: (lastPage) => {\n      if (lastPage.next) {\n        const url = new URL(lastPage.next)\n        const nextOffset = url.searchParams.get('offset')\n        return nextOffset ? parseInt(nextOffset) : undefined\n      }\n      return undefined\n    },\n  })\n}\n\nexport default useGetCurrentUserPlaylists\n","import { GetCurrentUserPlaylistRequest, GetCurrentUserPlaylistResponse } from '../models/playlist'\nimport api from '../utils/api'\n\nconst getCurrentUserPlaylists = async ({\n  limit,\n  offset,\n}: GetCurrentUserPlaylistRequest): Promise<GetCurrentUserPlaylistResponse> => {\n  try {\n    const response = await api.get(`/me/playlists`, {\n      params: { limit, offset },\n    })\n    return response.data\n  } catch (error) {\n    throw new Error('fila to fetch current user playlists')\n  }\n}\n\nexport default getCurrentUserPlaylists\n","import { User } from '../models/user'\nimport api from '../utils/api'\n\nexport const getCurrentUserProfile = async (): Promise<User> => {\n  try {\n    const response = await api.get(`/me`)\n    return response.data\n  } catch (error) {\n    throw new Error('fail to fetch user porfile')\n  }\n}\n","import { useQuery, UseQueryResult } from '@tanstack/react-query'\nimport { getCurrentUserProfile } from '../apis/userApi'\nimport { User } from '../models/user'\n\nconst useGetCurrentUserProfile = (): UseQueryResult<User, Error> => {\n  const accessToken = localStorage.getItem('access_token')\n  return useQuery({\n    queryKey: ['current-user-profile'],\n    queryFn: getCurrentUserProfile,\n    enabled: !!accessToken,\n  })\n}\n\nexport default useGetCurrentUserProfile\n","import { ImageList, ImageListItem, Typography, styled } from '@mui/material'\nimport useGetCurrentUserPlaylists from '../../hooks/useGetCurrentUserPlaylists'\nimport useGetCurrentUserProfile from '../../hooks/useGetCurrentUserProfile'\nimport { useEffect } from 'react'\nimport { useInView } from 'react-intersection-observer'\n\nconst PlaylistContainer = styled('div')(({ theme }) => ({\n  overflowY: 'auto',\n  maxHeight: 'calc(100vh - 240px)',\n  height: '100%',\n  padding: '12px',\n  '&::-webkit-scrollbar': {\n    display: 'none',\n  },\n  msOverflowStyle: 'none',\n  scrollbarWidth: 'none',\n  [theme.breakpoints.down('sm')]: {\n    maxHeight: 'calc(100vh - 65px - 119px)',\n  },\n}))\n\nconst Library = () => {\n  const { data, fetchNextPage, hasNextPage, isFetchingNextPage } = useGetCurrentUserPlaylists({\n    limit: 10,\n    offset: 0,\n  })\n  const { data: user } = useGetCurrentUserProfile()\n  const { ref, inView } = useInView()\n\n  useEffect(() => {\n    if (inView && hasNextPage && !isFetchingNextPage) {\n      fetchNextPage()\n    }\n  }, [inView, hasNextPage, isFetchingNextPage])\n\n  if (!user || !data) return null\n\n  return (\n    <PlaylistContainer>\n      <ImageList cols={2} gap={16} variant=\"standard\">\n        {data.pages.map((page, pageIndex) =>\n          page.items.map((playlist, i) => {\n            const imageUrl = Array.isArray(playlist.images) && playlist.images.length > 0 ? playlist.images[0].url : ''\n            return (\n              <ImageListItem key={`${pageIndex}-${playlist.id}`}>\n                <img\n                  src={imageUrl || '/broken-image.jpg'}\n                  alt={playlist.name}\n                  loading=\"lazy\"\n                  style={{ borderRadius: 8 }}\n                />\n                <Typography variant=\"subtitle1\" fontWeight={700} color=\"limegreen\" mt={1}>\n                  {playlist.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"#aaa\">\n                  Playlist • {playlist.owner.display_name}\n                </Typography>\n              </ImageListItem>\n            )\n          })\n        )}\n      </ImageList>\n      <div ref={ref} />\n    </PlaylistContainer>\n  )\n}\n\nexport default Library\n","export const generateRandomString = (length: number): string => {\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  const values = crypto.getRandomValues(new Uint8Array(length))\n  return values.reduce((acc, x) => acc + possible[x % possible.length], '')\n}\n\nexport const sha256 = async (plain: string): Promise<ArrayBuffer> => {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(plain)\n  return window.crypto.subtle.digest('SHA-256', data)\n}\n\nexport const base64encode = (input: ArrayBuffer): string => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n}\n","import { Button } from '@mui/material'\nimport React from 'react'\nimport { getSpotifyAuthUrl } from '../../utils/auth'\n\nconst LoginBtn = () => {\n  const login = () => {\n    getSpotifyAuthUrl()\n  }\n  return (\n    <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={login}>\n      Login\n    </Button>\n  )\n}\n\nexport default LoginBtn\n","import { CLIENT_ID, SCOPES } from '../configs/authConfig'\nimport { REDIRECT_URI } from '../configs/commonConfig'\nimport { AuthUrlParams } from '../models/auth'\nimport { base64encode, generateRandomString, sha256 } from './crypto'\n\nexport const getSpotifyAuthUrl = async () => {\n  const codeVerifier = generateRandomString(64)\n  const hashed = await sha256(codeVerifier)\n  const codeChallenge = base64encode(hashed)\n\n  const clientId = CLIENT_ID\n  const redirectUri = REDIRECT_URI\n\n  const scope = SCOPES\n  const authUrl = new URL('https://accounts.spotify.com/authorize')\n\n  // generated in the previous step\n  window.localStorage.setItem('code_verifier', codeVerifier)\n\n  if (clientId && redirectUri) {\n    const params: AuthUrlParams = {\n      response_type: 'code',\n      client_id: clientId,\n      scope,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    }\n    authUrl.search = new URLSearchParams(Object.entries(params)).toString()\n    window.location.href = authUrl.toString() // spotify 로그인 주소를 연다\n  }\n}\n","import { Avatar, Box } from '@mui/material'\nimport React, { useState } from 'react'\nimport LoginBtn from '../../common/components/LoginBtn'\nimport useGetCurrentUserProfile from '../../hooks/useGetCurrentUserProfile'\n\nconst Navbar = () => {\n  const [imgError, setImgError] = useState(false)\n\n  const { data: userProfile } = useGetCurrentUserProfile()\n  const imageUrl = userProfile?.images?.[0]?.url\n\n  return (\n    // <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" height=\"24px\">\n    //   {userProfile ? userProfile?.images?.[0]?.url : <LoginBtn />}\n    // </Box>\n    <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" height=\"40px\">\n      {userProfile ? (\n        <Avatar\n          src={!imgError && imageUrl ? imageUrl : '/broken-image.jpg'}\n          onError={() => setImgError(true)}\n          alt=\"user-profile\"\n          sx={{ width: 32, height: 32 }}\n        />\n      ) : (\n        <LoginBtn />\n      )}\n    </Box>\n  )\n}\n\nexport default Navbar\n","import { Box, styled, Typography } from '@mui/material'\nimport { NavLink, Outlet } from 'react-router'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SearchIcon from '@mui/icons-material/Search'\nimport LibraryHead from './components/LibraryHead'\nimport { useEffect, useState } from 'react'\nimport Library from './components/Library'\nimport Navbar from './components/Navbar'\n\nconst Layout = styled('div')({\n  display: 'flex',\n  height: '100vh',\n  padding: '8px',\n})\n\nconst Sidebar = styled('div')(({ theme }) => ({\n  width: '331px',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.down('sm')]: {\n    display: 'none',\n  },\n}))\n\nconst ContentBox = styled(Box)(({ theme }) => ({\n  borderRadius: '8px',\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.text.primary,\n  width: '100%',\n  // height: '13vh',\n  padding: '20px',\n  marginBottom: '8px',\n  marginRight: '8px',\n}))\n\nconst NavList = styled('ul')({\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst StyledNavLink = styled(NavLink)(({ theme }) => ({\n  textDecoration: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '20px',\n  color: theme.palette.text.secondary,\n\n  '&.active': {\n    color: theme.palette.text.primary,\n  },\n\n  '& svg': {\n    color: theme.palette.text.secondary,\n  },\n\n  '&.active svg': {\n    color: theme.palette.text.primary,\n  },\n}))\n\nconst AppLayout = () => {\n  return (\n    <div>\n      <Layout>\n        <Sidebar>\n          <ContentBox>\n            <NavList>\n              <StyledNavLink to=\"/\">\n                <HomeIcon />\n                <Typography variant=\"h2\" fontWeight={700}>\n                  Home\n                </Typography>\n              </StyledNavLink>\n              <StyledNavLink to=\"/search\">\n                <SearchIcon />\n                <Typography variant=\"h2\" fontWeight={700}>\n                  Search\n                </Typography>\n              </StyledNavLink>\n            </NavList>\n          </ContentBox>\n          <LibraryHead />\n          <Library />\n        </Sidebar>\n        <ContentBox>\n          <Navbar />\n          <Outlet />\n        </ContentBox>\n      </Layout>\n    </div>\n  )\n}\n\nexport default AppLayout\n"],"names":["AddLibrary","styled","_ref","theme","display","justifyContent","marginTop","LibraryHead","_jsx","children","_jsxs","BookmarkIcon","Typography","variant","fontWeight","AddRoundedIcon","sx","color","api","axios","create","baseURL","SPOTIFY_BASE_URL","headers","Authorization","concat","localStorage","getItem","interceptors","request","use","limit","offset","useInfiniteQuery","queryKey","queryFn","_ref2","pageParam","async","get","params","data","error","Error","getCurrentUserPlaylists","initialPageParam","getNextPageParam","lastPage","next","nextOffset","URL","searchParams","parseInt","undefined","getCurrentUserProfile","useGetCurrentUserProfile","accessToken","useQuery","enabled","PlaylistContainer","overflowY","maxHeight","height","padding","msOverflowStyle","scrollbarWidth","breakpoints","down","Library","fetchNextPage","hasNextPage","isFetchingNextPage","useGetCurrentUserPlaylists","user","ref","inView","useInView","useEffect","ImageList","cols","gap","pages","map","page","pageIndex","items","playlist","i","imageUrl","Array","isArray","images","length","url","ImageListItem","src","alt","name","loading","style","borderRadius","mt","owner","display_name","id","LoginBtn","Button","size","onClick","login","codeVerifier","crypto","getRandomValues","Uint8Array","reduce","acc","x","possible","codeChallenge","input","TextEncoder","encode","plain","window","subtle","digest","sha256","btoa","String","fromCharCode","replace","clientId","CLIENT_ID","redirectUri","REDIRECT_URI","scope","SCOPES","authUrl","setItem","response_type","client_id","code_challenge_method","code_challenge","redirect_uri","search","URLSearchParams","Object","entries","toString","location","href","getSpotifyAuthUrl","Navbar","_userProfile$images","imgError","setImgError","useState","userProfile","Box","alignItems","Avatar","onError","width","Layout","Sidebar","flexDirection","ContentBox","backgroundColor","palette","background","paper","text","primary","marginBottom","marginRight","NavList","listStyle","margin","StyledNavLink","NavLink","_ref3","textDecoration","secondary","AppLayout","to","HomeIcon","SearchIcon","Outlet"],"sourceRoot":""}