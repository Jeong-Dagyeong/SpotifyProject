{"version":3,"file":"245.js?ver=c7ef7d3f15e0c6fc8b85","mappings":"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","sources":["webpack://spotify-demo/./src/utils/api.ts","webpack://spotify-demo/./src/apis/userApi.ts","webpack://spotify-demo/./src/hooks/useGetCurrentUserProfile.ts","webpack://spotify-demo/./src/utils/crypto.ts","webpack://spotify-demo/./src/utils/auth.ts","webpack://spotify-demo/./src/layout/components/LibraryHead.tsx","webpack://spotify-demo/./src/hooks/useCreatePlaylist.ts","webpack://spotify-demo/./src/layout/components/EmptyPlaylist.tsx","webpack://spotify-demo/./src/layout/components/Library.tsx","webpack://spotify-demo/./src/hooks/useGetCurrentUserPlaylists.ts","webpack://spotify-demo/./src/common/components/LoginBtn.tsx","webpack://spotify-demo/./src/layout/components/Navbar.tsx","webpack://spotify-demo/./src/layout/AppLayout.tsx","webpack://spotify-demo/./src/apis/playlistApi.ts"],"sourcesContent":["import axios from 'axios'\nimport { SPOTIFY_BASE_URL } from '../configs/commonConfig'\n\nconst api = axios.create({\n  baseURL: SPOTIFY_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n  },\n})\n\napi.interceptors.request.use((request) => {\n  request.headers.Authorization = `Bearer ${localStorage.getItem('access_token')}`\n  return request\n})\n\nexport default api\n","import { User } from '../models/user'\nimport api from '../utils/api'\n\nexport const getCurrentUserProfile = async (): Promise<User> => {\n  try {\n    const response = await api.get(`/me`)\n    return response.data\n  } catch (error) {\n    throw new Error('fail to fetch user porfile')\n  }\n}\n","import { useQuery, UseQueryResult } from '@tanstack/react-query'\nimport { getCurrentUserProfile } from '../apis/userApi'\nimport { User } from '../models/user'\n\nconst useGetCurrentUserProfile = (): UseQueryResult<User, Error> => {\n  const accessToken = localStorage.getItem('access_token')\n  return useQuery({\n    queryKey: ['current-user-profile'],\n    queryFn: getCurrentUserProfile,\n    enabled: !!accessToken,\n  })\n}\n\nexport default useGetCurrentUserProfile\n","export const generateRandomString = (length: number): string => {\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  const values = crypto.getRandomValues(new Uint8Array(length))\n  return values.reduce((acc, x) => acc + possible[x % possible.length], '')\n}\n\nexport const sha256 = async (plain: string): Promise<ArrayBuffer> => {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(plain)\n  return window.crypto.subtle.digest('SHA-256', data)\n}\n\nexport const base64encode = (input: ArrayBuffer): string => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n}\n","import { CLIENT_ID, SCOPES } from '../configs/authConfig'\nimport { REDIRECT_URI } from '../configs/commonConfig'\nimport { AuthUrlParams } from '../models/auth'\nimport { base64encode, generateRandomString, sha256 } from './crypto'\n\nexport const getSpotifyAuthUrl = async () => {\n  const codeVerifier = generateRandomString(64)\n  const hashed = await sha256(codeVerifier)\n  const codeChallenge = base64encode(hashed)\n\n  const clientId = CLIENT_ID\n  const redirectUri = REDIRECT_URI\n\n  const scope = SCOPES\n  const authUrl = new URL('https://accounts.spotify.com/authorize')\n\n  // generated in the previous step\n  window.localStorage.setItem('code_verifier', codeVerifier)\n\n  if (clientId && redirectUri) {\n    const params: AuthUrlParams = {\n      response_type: 'code',\n      client_id: clientId,\n      scope,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    }\n    authUrl.search = new URLSearchParams(Object.entries(params)).toString()\n    window.location.href = authUrl.toString() // spotify 로그인 주소를 연다\n  }\n}\n","import BookmarkIcon from '@mui/icons-material/Bookmark'\nimport { Button, styled, Typography } from '@mui/material'\nimport AddRoundedIcon from '@mui/icons-material/AddRounded'\nimport useCreatePlaylist from '../../hooks/useCreatePlaylist'\nimport LoginBtn from '../../common/components/LoginBtn'\nimport { getSpotifyAuthUrl } from '../../utils/auth'\n\nconst AddLibrary = styled('div')(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-evenly',\n  marginTop: '30px',\n}))\n\nconst LibraryHead = () => {\n  const { mutate: createPlaylist } = useCreatePlaylist()\n  const hadleCreatePlaylist = () => {\n    if (!localStorage.getItem('access_token')) {\n      getSpotifyAuthUrl()\n    }\n    createPlaylist({ name: '나의 플레이리스트' })\n  }\n\n  return (\n    <div>\n      <AddLibrary>\n        <BookmarkIcon />\n        <Typography variant=\"h2\" fontWeight={700}>\n          Your Library\n        </Typography>\n        <Button onClick={hadleCreatePlaylist}>\n          <AddRoundedIcon sx={{ color: 'green' }} />\n        </Button>\n      </AddLibrary>\n    </div>\n  )\n}\n\nexport default LibraryHead\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\nimport { createPlaylist } from '../apis/playlistApi'\nimport useGetCurrentUserProfile from './useGetCurrentUserProfile'\nimport { CreatePlaylistRequest } from '../models/playlist'\n\nconst useCreatePlaylist = () => {\n  const { data: user } = useGetCurrentUserProfile()\n  const queryClient = useQueryClient()\n  return useMutation({\n    mutationFn: (params: CreatePlaylistRequest) => {\n      if (user) {\n        return createPlaylist(user?.id || '', params)\n      }\n      return Promise.reject(new Error('user is not definded'))\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['current-user-playlists'] })\n      console.log('성공')\n    },\n  })\n}\n\nexport default useCreatePlaylist\n","import { Box, Button, styled, Typography } from '@mui/material'\n\nconst EmptyPlaylist = () => {\n  const Layout = styled('div')(({ theme }) => ({\n    heigth: '100vh',\n    // border: 'solid white',\n  }))\n  const AddPlaylist = styled('div')(({ theme }) => ({\n    width: '80%',\n    height: '150px',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '10px',\n    padding: '20px',\n    margin: '0 auto',\n    marginTop: '10px',\n  }))\n\n  const CreatePlaylistBtn = styled(Button)(({ theme }) => ({\n    width: '120px',\n    height: '30px',\n    borderRadius: '30px',\n    backgroundColor: theme.palette.text.primary,\n    color: theme.palette.background.default,\n    textAlign: 'center',\n    marginTop: '20px',\n  }))\n  return (\n    <div>\n      <Layout>\n        <AddPlaylist>\n          <Typography variant=\"h2\" fontWeight={700}>\n            Create your first playlist\n          </Typography>\n          <Typography variant=\"body1\">It's easy, we'll help you</Typography>\n          <CreatePlaylistBtn>\n            <Typography variant=\"body1\" fontWeight={700}>\n              Create playlist\n            </Typography>\n          </CreatePlaylistBtn>\n        </AddPlaylist>\n      </Layout>\n    </div>\n  )\n}\n\nexport default EmptyPlaylist\n","import { ImageList, ImageListItem, Typography, styled } from '@mui/material'\nimport useGetCurrentUserPlaylists from '../../hooks/useGetCurrentUserPlaylists'\nimport useGetCurrentUserProfile from '../../hooks/useGetCurrentUserProfile'\nimport { useEffect } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { Navigate, useNavigate } from 'react-router'\nimport EmptyPlaylist from './EmptyPlaylist'\n\nconst PlaylistContainer = styled('div')(({ theme }) => ({\n  overflowY: 'auto',\n  maxHeight: 'calc(100vh - 240px)',\n  height: '100%',\n  padding: '12px',\n  '&::-webkit-scrollbar': {\n    display: 'none',\n  },\n  msOverflowStyle: 'none',\n  scrollbarWidth: 'none',\n  [theme.breakpoints.down('sm')]: {\n    maxHeight: 'calc(100vh - 65px - 119px)',\n  },\n}))\n\nconst HoverPlaylistItem = styled(ImageListItem)(({ theme }) => ({\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n  },\n}))\n\nconst Library = () => {\n  const { data, fetchNextPage, hasNextPage, isFetchingNextPage } = useGetCurrentUserPlaylists({\n    limit: 10,\n    offset: 0,\n  })\n  const { data: user } = useGetCurrentUserProfile()\n  const { ref, inView } = useInView()\n\n  useEffect(() => {\n    if (inView && hasNextPage && !isFetchingNextPage) {\n      fetchNextPage()\n    }\n  }, [inView, hasNextPage, isFetchingNextPage])\n\n  const navigate = useNavigate()\n\n  const handleClick = (id: string) => {\n    navigate(`/playlist/${id}`)\n  }\n\n  if (!user || !data) return null\n\n  return (\n    <PlaylistContainer>\n      {user.id ? (\n        <>\n          <ImageList cols={2} gap={16} variant=\"standard\">\n            {data.pages.map((page, pageIndex) =>\n              page.items.map((playlist, i) => {\n                const imageUrl =\n                  Array.isArray(playlist.images) && playlist.images.length > 0 ? playlist.images[0].url : ''\n                const id = playlist.id\n                if (!id) return null\n                return (\n                  <HoverPlaylistItem key={`${pageIndex}-${playlist.id}`} onClick={() => handleClick(id)}>\n                    <img\n                      src={imageUrl || '/images/noImage.png'}\n                      alt={playlist.name}\n                      loading=\"lazy\"\n                      style={{ borderRadius: 8 }}\n                    />\n                    <Typography variant=\"subtitle1\" fontWeight={700} color=\"limegreen\" mt={1}>\n                      {playlist.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"#aaa\">\n                      Playlist • {playlist.owner.display_name}\n                    </Typography>\n                  </HoverPlaylistItem>\n                )\n              })\n            )}\n          </ImageList>\n          <div ref={ref} />\n        </>\n      ) : (\n        <EmptyPlaylist />\n      )}\n    </PlaylistContainer>\n  )\n}\n\nexport default Library\n","import { useInfiniteQuery } from '@tanstack/react-query'\nimport { GetCurrentUserPlaylistRequest } from '../models/playlist'\nimport { getCurrentUserPlaylists } from '../apis/playlistApi'\n\nconst useGetCurrentUserPlaylists = ({ limit, offset }: GetCurrentUserPlaylistRequest) => {\n  return useInfiniteQuery({\n    queryKey: ['current-user-playlists'],\n    queryFn: ({ pageParam = 0 }) => {\n      return getCurrentUserPlaylists({ limit, offset: pageParam })\n    },\n    initialPageParam: 0, // 첫 시작값\n    getNextPageParam: (lastPage) => {\n      if (lastPage.next) {\n        const url = new URL(lastPage.next)\n        const nextOffset = url.searchParams.get('offset')\n        return nextOffset ? parseInt(nextOffset) : undefined\n      }\n      return undefined\n    },\n  })\n}\n\nexport default useGetCurrentUserPlaylists\n","import { Button, styled } from '@mui/material'\nimport { getSpotifyAuthUrl } from '../../utils/auth'\n\nconst LoginBtn = () => {\n  const login = () => {\n    getSpotifyAuthUrl()\n  }\n  return (\n    <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={login}>\n      Login\n    </Button>\n  )\n}\n\nexport default LoginBtn\n","// import { Avatar, Box } from '@mui/material'\n// import React, { useState } from 'react'\n// import LoginBtn from '../../common/components/LoginBtn'\n// import useGetCurrentUserProfile from '../../hooks/useGetCurrentUserProfile'\n\n// const Navbar = () => {\n//   const [imgError, setImgError] = useState(false)\n\n//   const { data: userProfile } = useGetCurrentUserProfile()\n//   const imageUrl = userProfile?.images?.[0]?.url\n\n//   return (\n//     <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" height=\"40px\">\n//       {userProfile ? (\n//         <Avatar\n//           src={!imgError && imageUrl ? imageUrl : '/broken-image.jpg'}\n//           onError={() => setImgError(true)}\n//           alt=\"user-profile\"\n//           sx={{ width: 32, height: 32 }}\n//         />\n//       ) : (\n//         <LoginBtn />\n//       )}\n//     </Box>\n//   )\n// }\n\n// export default Navbar\n\nimport React, { useState } from 'react'\nimport { Avatar, Box, Button, styled } from '@mui/material'\nimport useGetCurrentUserProfile from '../../hooks/useGetCurrentUserProfile'\nimport LoginBtn from '../../common/components/LoginBtn'\nimport { useNavigate } from 'react-router'\nimport { useQueryClient } from '@tanstack/react-query'\n\nconst HoverContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  display: 'inline-block',\n}))\n\nconst LogoutBox = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  top: '42px',\n  right: -25,\n  backgroundColor: theme.palette.background.paper,\n  boxShadow: theme.shadows[2],\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n  zIndex: 10,\n}))\n\nconst Navbar = () => {\n  const [imgError, setImgError] = useState(false)\n  const [showLogout, setShowLogout] = useState(false)\n  const { data: userProfile } = useGetCurrentUserProfile()\n  const imageUrl = userProfile?.images?.[0]?.url\n  const navigate = useNavigate()\n\n  const logoutQueryClient = useQueryClient()\n  const handleLogout = () => {\n    localStorage.removeItem('access_token')\n    logoutQueryClient.clear()\n    window.location.reload()\n  }\n\n  const handleAvatarClick = () => {\n    setShowLogout((prev) => !prev)\n  }\n\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" height=\"40px\" position=\"relative\">\n      {userProfile ? (\n        <HoverContainer>\n          <Avatar\n            src={!imgError && imageUrl ? imageUrl : '/broken-image.jpg'}\n            onError={() => setImgError(true)}\n            alt=\"user-profile\"\n            sx={{ width: 32, height: 32, cursor: 'pointer' }}\n            onClick={handleAvatarClick}\n          />\n          {showLogout && (\n            <LogoutBox>\n              <Button variant=\"text\" color=\"inherit\" size=\"small\" onClick={handleLogout}>\n                Logout\n              </Button>\n            </LogoutBox>\n          )}\n        </HoverContainer>\n      ) : (\n        <LoginBtn />\n      )}\n    </Box>\n  )\n}\n\nexport default Navbar\n","import { Box, styled, Typography } from '@mui/material'\nimport { NavLink, Outlet } from 'react-router'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SearchIcon from '@mui/icons-material/Search'\nimport LibraryHead from './components/LibraryHead'\nimport { useEffect, useState } from 'react'\nimport Library from './components/Library'\nimport Navbar from './components/Navbar'\nimport EmptyPlaylist from './components/EmptyPlaylist'\n\nconst Layout = styled('div')({\n  display: 'flex',\n  height: '100vh',\n  padding: '8px',\n})\n\nconst Sidebar = styled('div')(({ theme }) => ({\n  width: '331px',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.down('sm')]: {\n    display: 'none',\n  },\n}))\n\nconst ContentBox = styled(Box)(({ theme }) => ({\n  borderRadius: '8px',\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.text.primary,\n  width: '100%',\n  // height: '13vh',\n  padding: '20px',\n  marginBottom: '8px',\n  marginRight: '8px',\n}))\n\nconst NavList = styled('ul')({\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst StyledNavLink = styled(NavLink)(({ theme }) => ({\n  textDecoration: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '20px',\n  color: theme.palette.text.secondary,\n\n  '&.active': {\n    color: theme.palette.text.primary,\n  },\n\n  '& svg': {\n    color: theme.palette.text.secondary,\n  },\n\n  '&.active svg': {\n    color: theme.palette.text.primary,\n  },\n}))\n\nconst AppLayout = () => {\n  return (\n    <div>\n      <Layout>\n        <Sidebar>\n          <ContentBox>\n            <NavList>\n              <StyledNavLink to=\"/\">\n                <HomeIcon />\n                <Typography variant=\"h2\" fontWeight={700}>\n                  Home\n                </Typography>\n              </StyledNavLink>\n              <StyledNavLink to=\"/search\">\n                <SearchIcon />\n                <Typography variant=\"h2\" fontWeight={700}>\n                  Search\n                </Typography>\n              </StyledNavLink>\n            </NavList>\n          </ContentBox>\n          <LibraryHead />\n          <Library />\n        </Sidebar>\n        <ContentBox>\n          <Navbar />\n          <Outlet />\n        </ContentBox>\n      </Layout>\n    </div>\n  )\n}\n\nexport default AppLayout\n","import {\n  CreatePlaylistRequest,\n  GetCurrentUserPlaylistRequest,\n  GetCurrentUserPlaylistResponse,\n  GetPlaylistItemsRequest,\n  GetPlaylistItemsResponse,\n  GetPlaylistRequest,\n  Playlist,\n} from '../models/playlist'\nimport api from '../utils/api'\n\nexport const getCurrentUserPlaylists = async ({\n  limit,\n  offset,\n}: GetCurrentUserPlaylistRequest): Promise<GetCurrentUserPlaylistResponse> => {\n  try {\n    const response = await api.get(`/me/playlists`, {\n      params: { limit, offset },\n    })\n    return response.data\n  } catch (error) {\n    throw new Error('fila to fetch current user playlists')\n  }\n}\n\nexport const getPlaylist = async (params: GetPlaylistRequest): Promise<Playlist> => {\n  try {\n    const response = await api.get(`/playlists/${params.playlist_id}`, {\n      params,\n    })\n    return response.data\n  } catch (error) {\n    throw new Error('fail to fetch playlist detail')\n  }\n}\n\nexport const getPlaylistItems = async (params: GetPlaylistItemsRequest): Promise<GetPlaylistItemsResponse> => {\n  try {\n    const response = await api.get(`/playlists/${params.playlist_id}/tracks`, {\n      params,\n    })\n    return response.data\n  } catch (error) {\n    throw new Error('fail to fetch playlist items')\n  }\n}\n\nexport const createPlaylist = async (user_id: string, params: CreatePlaylistRequest): Promise<Playlist> => {\n  try {\n    const { name, playlist_public, collaborative, description } = params\n    const response = await api.post(`/users/${user_id}/playlists`, {\n      name,\n      public: playlist_public,\n      collaborative,\n      description,\n    })\n    return response.data\n  } catch (error) {\n    throw new Error('fail to fetch create playlist')\n  }\n}\n"],"names":["api","axios","create","baseURL","SPOTIFY_BASE_URL","headers","Authorization","concat","localStorage","getItem","interceptors","request","use","getCurrentUserProfile","async","get","data","error","Error","useGetCurrentUserProfile","accessToken","useQuery","queryKey","queryFn","enabled","getSpotifyAuthUrl","codeVerifier","crypto","getRandomValues","Uint8Array","reduce","acc","x","possible","codeChallenge","input","TextEncoder","encode","plain","window","subtle","digest","sha256","btoa","String","fromCharCode","replace","clientId","CLIENT_ID","redirectUri","REDIRECT_URI","scope","SCOPES","authUrl","URL","setItem","params","response_type","client_id","code_challenge_method","code_challenge","redirect_uri","search","URLSearchParams","Object","entries","toString","location","href","AddLibrary","styled","_ref","theme","display","justifyContent","marginTop","LibraryHead","mutate","createPlaylist","useCreatePlaylist","user","queryClient","useQueryClient","useMutation","mutationFn","id","Promise","reject","onSuccess","invalidateQueries","console","log","_jsx","children","_jsxs","BookmarkIcon","Typography","variant","fontWeight","Button","onClick","hadleCreatePlaylist","name","AddRoundedIcon","sx","color","EmptyPlaylist","Layout","heigth","AddPlaylist","_ref2","width","height","backgroundColor","palette","background","paper","borderRadius","padding","margin","CreatePlaylistBtn","_ref3","text","primary","default","textAlign","PlaylistContainer","overflowY","maxHeight","msOverflowStyle","scrollbarWidth","breakpoints","down","HoverPlaylistItem","ImageListItem","action","hover","Library","fetchNextPage","hasNextPage","isFetchingNextPage","limit","offset","useInfiniteQuery","pageParam","getCurrentUserPlaylists","initialPageParam","getNextPageParam","lastPage","next","nextOffset","searchParams","parseInt","undefined","useGetCurrentUserPlaylists","ref","inView","useInView","useEffect","navigate","useNavigate","_Fragment","ImageList","cols","gap","pages","map","page","pageIndex","items","playlist","i","imageUrl","Array","isArray","images","length","url","handleClick","src","alt","loading","style","mt","owner","display_name","LoginBtn","size","login","HoverContainer","Box","position","LogoutBox","top","right","boxShadow","shadows","spacing","shape","zIndex","Navbar","_userProfile$images","imgError","setImgError","useState","showLogout","setShowLogout","userProfile","logoutQueryClient","alignItems","Avatar","onError","cursor","handleAvatarClick","prev","handleLogout","removeItem","clear","reload","Sidebar","flexDirection","ContentBox","marginBottom","marginRight","NavList","listStyle","StyledNavLink","NavLink","textDecoration","secondary","AppLayout","to","HomeIcon","SearchIcon","Outlet","getPlaylist","playlist_id","getPlaylistItems","user_id","playlist_public","collaborative","description","post","public"],"sourceRoot":""}